% Script file: ferro_brownian.m
%
% Purpose:
%	This program calculates the trajectory of a ferrofluid particle in the 
%	magnetic field generated by a dipole m. Brownian motion consider. The
%	scheme is only first order accurate in time.
% Assumptions:
%	Pipe is centered at x-axis, flow is in x-direction, pulsating.
%
% Define variables:
% Global:
%	m_dpl(3)-- magnetization of the magnet
%	mu0	-- permeability of vacuum
%	xdipole(3) -- position of the magnet
%	rad_particle -- radius of particle
%	chi	-- susceptibility of the ferro particle
%	rad_pipe -- radius of the pipe centered along x-axis
%	vmax	-- flow velocity at the axis of pipe
%	vosc	-- amplitude of velocity oscillation
%	omega	-- angular frequency of oscillation
%	viscosity -- viscosity of the flowing liquid
% Local:
%	x0(3)	-- initial position of the particle
%	t0	-- starting time
%	tf	-- ending time
% Record of revisions:
%	03/28/2009, Pengtao Yue, Original code
%   06/2/2010,  Pengtao Yue, the effect of tumor size and magnet size are
%   considered
%=======

global m_dpl chi mu0 viscosity rad_pipe rad_particle xdipole vmax vosc omega;

%
mu0=4e-7*pi;            
kB=1.3806503e-23;       %Boltzmann constant
Temp=312;               %Temperature (Kelvin)
%
%mm=1e-3;                %magnitude of dipole moment
%magnetsize=1.e-3;       %magnet size
mm=1065.52;
magnetsize=0.0337218;
rad_particle=1.e-10;    %particle radius(m)
rho_particle=1.e3;      %particle density(Kg/m^3)
rad_pipe=1e-4;          %pipe radius(m)
%
Lx=100*rad_pipe;         %particles are released at x=-Lx
tumor_radius=1.e-2;     %tumor radius
x0=[-Lx 0 -0.0*rad_pipe];           %initial position of particle
%
viscosity=4.e-3;        %blood viscosity (Pa s)
chi=0.2;                %susceptibility
vmax=2/pi*1.e-2;        %average axial velocity
vosc=0;                 %amplitude of oscilaltion
omega=18;           
%
output_trajectory=true;
%
t0=0;               %starting time
tf=10;               %ending time
N=50000;            %number of time steps to be simulated
NUMSIM=100;         %number of radom simulations
dt=(tf-t0)/N;       %time step
%
xdipole=[0 0 -rad_pipe-magnetsize];
theta=0;
%


%tf=tf+dt;
%N=N+1;

% setup bigtheta
bigtheta=zeros(1,100);  %100 is a big enough number to store all the parameters
DIM=3;                  %Dimension of the Brownian motion, no need to change
ii=1;
%
bigtheta(ii:ii+DIM-1)=x0;	% initial position of particle
ii=ii+DIM;
bigtheta(ii:ii+DIM-1)=xdipole;	% position of target
ii=ii+DIM;
bigtheta(ii:ii+DIM-1)=mm*[sind(theta) 0 cosd(theta)];	% target dipole moment
ii=ii+DIM;
%
bigtheta(ii)=rad_particle;	% particle radius
ii=ii+1;
bigtheta(ii)=rho_particle;	% particle density
ii=ii+1;
bigtheta(ii)=mu0;	% vacuum permeability
ii=ii+1;
bigtheta(ii)=kB;	% Boltzmann constant
ii=ii+1;
bigtheta(ii)=Temp;	% Temperature (Kelvin)
ii=ii+1;
bigtheta(ii)=chi;	% suspectibility of particle
ii=ii+1;
bigtheta(ii)=viscosity;	% blood viscosity
ii=ii+1;
bigtheta(ii)=rad_pipe;	% blood vessel radius
ii=ii+1;
bigtheta(ii)=vmax;	% blood velocity at vessel center
ii=ii+1;
bigtheta(ii)=vosc;	% amplitude of velocity oscillation
ii=ii+1;
bigtheta(ii)=omega;	% angular frequency of oscillation
ii=ii+1;
%

PROBLEM='Brownian';
OWNTIME=[t0:dt:tf];
NUMDEPVARS=DIM;
SDETYPE='Ito';
SEED=[];
%SEED=1;

%The structure of xhat: 
% xhat(i,(j-1)*DIM+1:(j+1)*DIM) stores the position of particle at t(i), in
% the jth simulation.
xhat=SDE_euler(bigtheta,PROBLEM,OWNTIME,NUMDEPVARS,NUMSIM,SDETYPE,SEED);

%get the probability of hitting target

idx=ones(1,NUMSIM)*(N+1);

x=zeros(N+1,NUMSIM);
y=zeros(N+1,NUMSIM);
z=zeros(N+1,NUMSIM);

x(1:N+1,1:NUMSIM)=xhat(1:N+1,1:DIM:DIM*NUMSIM);
y(1:N+1,1:NUMSIM)=xhat(1:N+1,2:DIM:DIM*NUMSIM);
z(1:N+1,1:NUMSIM)=xhat(1:N+1,3:DIM:DIM*NUMSIM);
%

rr(1:N+1,1:NUMSIM)=rad_pipe-sqrt(y(1:N+1,1:NUMSIM).^2+ ...
    z(1:N+1,1:NUMSIM).^2);

hit=0;
for j=1:NUMSIM
    for i=1:N+1
        if(rr(i,j)<=0)  %rr(i-1,j)>0, r(i,j)<=0
            idx(j)=i;
            
            c1=abs(rr(i,j))/(abs(rr(i-1,j))+abs(rr(i,j)));
            c2=1-c1;
            x(i,j)=c1*x(i-1,j)+c2*x(i,j);   %reset the particle position
            y(i,j)=c1*y(i-1,j)+c2*y(i,j);   %to the pipe wall
            z(i,j)=c1*z(i-1,j)+c2*z(i,j);
            if(abs(x(i,j))<tumor_radius)
                hit=hit+1;
            end
            break;
        end
    end
end





probability=hit/NUMSIM;   %The number of hits divided total simulations

fprintf('probability of hitting target = %g\n',probability);
%visualization

if(output_trajectory)
    fid=fopen('trajectory.dat','w');
    fprintf(fid,'TITLE="particle trajectories" \n');
    fprintf(fid,'VARIABLES= "x" "y" "z" "t" \n');
    for j=1:NUMSIM
        fprintf(fid,'ZONE T="%4.4d", I=%d, F=POINT\n', ...
                 j,idx(j));
        for i=1:idx(j);
            fprintf(fid,'%12.5g %12.5g %12.5g %12.5g\n',...
                x(i,j),y(i,j),z(i,j),dt*(i-1));
        end
    end
    fclose(fid);
end
   
for j=1:NUMSIM
	for i=idx(j)+1:N+1
        % remove the portion of trajectories after hitting wall
        x(i,j)=x(idx(j),j);
        y(i,j)=y(idx(j),j);
        z(i,j)=z(idx(j),j);
	end
end
%plot(xhat(:,DIM*([1:NUMSIM]-1)+1),xhat(:,DIM*[1:NUMSIM]));

%figure(1);
%plot(x(:,1:NUMSIM),z(:,1:NUMSIM));
%title(['particle trajectories (NUMSIM=',num2str(NUMSIM,'%d'),')']);
%axis([-Lx*2, Lx*6, -rad_pipe, -rad_pipe*0.8]);
%xlabel('x(m)');
%ylabel('z(m)');

%figure(2);
%plot(x(:,1:NUMSIM),y(:,1:NUMSIM));
%title(['particle trajectories (NUMSIM=',num2str(NUMSIM,'%d'),')']);
%axis([-Lx*2, Lx*6, -rad_pipe*0.1, rad_pipe*0.1]);
%xlabel('x(m)');
%ylabel('y(m)');

%figure(3);
%plot(y(:,1:NUMSIM),z(:,1:NUMSIM));
%title(['particle trajectories (NUMSIM=',num2str(NUMSIM,'%d'),')']);
%axis([-rad_pipe*0.1,rad_pipe*0.1, -rad_pipe, -rad_pipe*0.8]);
%xlabel('y(m)');
%ylabel('z(m)');
